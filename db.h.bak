#ifndef DATABASE__H
#define DATABASE__H

#include <iostream>
#include <string>
#include <vector>  
#include "models/user.h"
#include "models/travel.h"
#include "models/register.h"

class Database {

    static std::vector<User> users;
    static std::vector<Travel> travels;
    static std::vector<Register> registers;

public:
    static std::vector<Travel> selectAllFromTravels() {
      return Database::travels;
    }

    Database() {
    //     // Initialize users
    //     users.emplace_back("Tchelo", "seacello.correa@gmail.com");
    //     // users.emplace_back("Ryan de Oliveira", "ryandehallo229@gmail.com");
    //     // users.emplace_back("Matheus de Souza", "matheus@abdou.com.br");
    //     // users.emplace_back("Marcelo Correa", "macorrea-@hotmail.com");

        // Initialize travels
        Database::travels.emplace_back("Sao Paulo", "2024-08-08");
        Database::travels.emplace_back("Minas Gerais", "2024-08-08");
        Database::travels.emplace_back("Paris", "2024-08-08");

    //     // Initialize travels
    //     registers.emplace_back("Tchelo", "seacello.correa@gmail.com", "SÃ£o Paulo", "10-08-2024");
    // }

    // static std::vector<User> selectAllFromUsers() {
    //   return this->users;
    }

    // static std::vector<Travel> selectAllFromTravels() {
    //   return this->travels;
    // }

    // static std::vector<Register> selectAllFromRegister() {
    //   return this->registers;
    // }

    // void insertTravel(std::string travel, std::string date) {
    //     travels.emplace_back(travel, date);
    // }

    // void insertUser(std::string name, std::string email) {
    //     users.emplace_back(name, email);
    // }

    // void insertRegister(std::string name, std::string email, std::string travel, std::string date) {
    //     registers.emplace_back(name, email, travel, date);
    // }

};

std::vector<Travel> Database::travels = std::vector<Travel>();  

#endif 